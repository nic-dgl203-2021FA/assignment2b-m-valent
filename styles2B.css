/*
  Student:      Misko Valent
  Due Date:     Oct 19, 2021

  Filename:     style.css
  LastUpdated:  Oct 19, 2021
  
  Class:        DGL 203 - Advanced CSS
  Instructor:   Megan Wilson
  Semester:     NIC 2021 Fall
  */

/*##############  MENU  ###############

a) Global Styles

b) Task #4.1 Styles

c) Task #4.2 Styles

d) Task #4.3 Styles

e) Task #5 Cloud Styles

f) Task #4.4 Styles

g) Task #4.5 Styles

h) Task #4.6 Styles

i) Task #2.2 Small Screens

j) Assignment 2C - Part 01 - Styles

*/

/*##############  a) Global Styles  ###############*/

body {
  padding: 20px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-color: lightgrey;

  /* using background for visual cues during setup, option to delete or alter upon completion */
}

:hover {
  cursor: crosshair;
}

.grid-container {
  background-color: white;
  max-width: 1000px;
  display: grid;
  grid-template-columns: repeat(3, minmax(300px, 1fr));
  grid-template-rows: repeat(3, minmax(200px, 1fr));
}

.grid-item {
  padding: 10px;
}

.grid-item:nth-child(1) {
  background-color: lightblue; /* visual cue only */
  grid-column: 1 / 2;
  grid-row: 1 / 2;
}
.grid-item:nth-child(2) {
  background-color: lightcyan; /* visual cue only */
  grid-column: 2 / 3;
  grid-row: 1 / 2;
}
.grid-item:nth-child(3) {
  background-color: lightsteelblue; /* visual cue only */
  grid-column: 3 / 4;
  grid-row: 1 / 2;
}
.grid-item:nth-child(4) {
  background-color: lightpink; /* visual cue only */
  grid-column: 1 / 4;
  grid-row: 2 / 3;
}
.grid-item:nth-child(5) {
  /* bonus material */
  background-color: orange; /* visual cue only */
  grid-column: 1 / 2;
  grid-row: 3 / 4;
}
.grid-item:nth-child(6) {
  /* bonus material */
  background-color: lightseagreen; /* visual cue only */
  grid-column: 2 / 3;
  grid-row: 3 / 4;
}
.grid-item:nth-child(7) {
  /* bonus material */
  background-color: lightyellow; /* visual cue only */
  grid-column: 3 / 4;
  grid-row: 3 / 4;
}

/*############## b) Task #4.1 Styles  ###############*/

.button {
  display: flex;
}

button {
  border: 4px dashed black;
  margin: auto;
  padding: 12px 24px;
  background: white;
  width: 240px;
  font-size: 1.2em;
  font-weight: bold;
  text-align: center;
}

button {
  transition: background 0.4s ease-in, border 0.3s 0.2s ease-in-out,
    border-radius 0.25s 0.1s ease-in, color 0.3s 0.3s linear;
}

button:hover {
  background: green;
  border: 3px solid lightgreen;
  border-radius: 16px;
  color: white;
}

/*##############  c) Task #4.2 Styles  ###############*/

.shrink {
  display: flex;
  justify-content: center;
}

@keyframes skrinkage {
  0% {
    transform: scale(1.2);
  }
  65% {
    transform: scale(0.7);
  }
  100% {
    transform: scale(1);
  }
}

h3 {
  align-self: center;
  font-size: 2.5rem;
  font-weight: bolder;
  color: purple;

  animation-name: skrinkage;
  animation-duration: 3s;
  animation-delay: 4s;
  animation-fill-mode: both;
}

/*##############  d) Task #4.3 Styles  ###############*/

.ghost {
  display: flex;
  align-items: center;
  justify-content: left;
}

.ghost img {
  height: 60px;
  width: auto;
}

@keyframes float {
  100% {
    transform: translateX(300%);
  }
}

#spooky {
  animation-name: float;
  animation-duration: 2s;
  /* animation-fill-mode: forwards; */
  animation-iteration-count: infinite;
  animation-play-state: paused;
  animation-direction: alternate-reverse;
}

#spooky:hover {
  animation-play-state: running;
}

/*##############  e) Task #5 Cloud Styles  ###############*/

.clouds {
  overflow: hidden;
  position: relative;
}

.clouds img {
  height: 60px;
  width: auto;
}

@keyframes puffy {
  0% {
    transform: translateX(-360px);
  }
  100% {
    transform: translateX(980px);
  }
}

.cloud01 {
  margin-top: 24px;
  animation: puffy 26s linear 4s infinite both;
}

.cloud02 {
  margin-top: 60px;
  order: 1;
  animation: puffy 28s linear infinite both;
}

.cloud03 {
  margin-top: 6px;
  order: 2;
  animation: puffy 32s linear 6s infinite both;
}

.cloud04 {
  margin-top: 96px;
  order: 3;
  animation: puffy 34s linear infinite both;
}

/*##############  f) Task #4.4 Styles  ###############*/

.typewriter {
  display: flex;
  justify-content: center;
}

h2 {
  align-self: center;
  font-size: 1.75rem;
  font-weight: bolder;
  color: black;
  font-family: "FreeMono", monospace;
  overflow: hidden;
  border-right: 0.2em solid blueviolet;

  white-space: nowrap;
  margin: 0 auto;
  letter-spacing: 0.1em;
}

h2 {
  animation: typing 3s 3s steps(16) both, cursor 0.5s steps(1) infinite;
}
@keyframes typing {
  0% {
    width: 0px;
  }
  100% {
    width: 100%;
  }
}

@keyframes cursor {
  0%,
  100% {
    border-color: transparent;
  }
  50% {
    border-color: blueviolet;
  }
}

/*##############  g) Task #4.5 Styles  ###############*/

.scary {
  align-items: center;
  display: flex;
  justify-content: center;
}

h4 {
  font-family: "FreeMono", monospace;
  font-size: 3.5em;
  font-weight: 900;

  perspective: 2000px;
  transform-style: preserve-3d;
  /* forgot to add the lying down and flipping up look */
}

span {
  display: inline-block;
  color: whitesmoke;
}

@keyframes flipUp {
  0% {transform:rotateX(90deg);}
  100% {transform:rotateX(0deg);}
}

@keyframes disappear {
  100% {
    opacity: 0;
    }
}

span {
  animation: flipUp .5s cubic-bezier(.49,1.5,.84,.29) 4.2s both,
  /* can create custom cubic-bezier curve playing around at https://cubic-bezier.com  */
              disappear 1.0s ease-out 8.0s forwards;
  transform-origin: 50% 70%;
}
span:nth-child(2) {
  animation-delay: 4.5s, 7.8s;
}
span:nth-child(3) {
  animation-delay: 4.7s, 7.7s;
}
span:nth-child(4) {
  animation-delay: 4.8s, 7.5s;
}

/*##############  h) Task #4.6 Styles  ###############*/

/* creating css variables for dynamic css animation */

:root {
 --distY: 190px;
 --distX: -20px;
 --deg: 275deg;
 --dur: 2s;
 --delay: 0s;
 --ease: linear;
}

.treats {
  display: flex;
  overflow: hidden;
  position: relative;
}

.treats img {
  height: 70px;
  width: auto;
  animation: drop var(--dur) var(--delay) var(--ease) both;
}

@keyframes drop {
  0% {
    transform: translateY(-360%)
               translateX(480%)
               rotate(0deg)
  }
  100% {
    transform: translateY(var(--distY))
               translateX(var(--distX))
               rotate(var(--deg))
  }
}

.candy01 {
  --distY: 110%;
  --distX: 95%;
  --deg: 210deg;
  --dur: 0.3s;
  --delay: 3.2s;
  --ease: cubic-bezier(.78,.57,.32,.93);
  /* animation: drop 0.3s cubic-bezier(.78,.57,.32,.93) 1.9s both; */
}

.candy02 {
  --distY:95%;
  --distX:85%;
  --deg:245deg;
  --dur: 0.5s;
  --delay: 4.1s;
  --ease: cubic-bezier(.82,.42,.33,.84);
  /* animation: drop 0.5s cubic-bezier(.82,.42,.33,.84) 2.1s both; */
}

.candy03 {
  --distY:100%;
  --distX:60%;
  --deg:10deg;
  --dur: 0.3s;
  --delay: 6.2s;
  --ease: cubic-bezier(.17,.49,.33,.84);
  /* animation: drop 0.3s cubic-bezier(.17,.49,.33,.84) 4.2s both; */
}

/*##############  i) Task #2.2 Small Screens  ###############*/

/* On screens that are 600px or less, set the background color to olive */
@media screen and (max-width: 600px) {
  body {
    background-color: olive;
  }

  :hover {
    cursor: pointer;
  }
  
  .grid-container {
    background-color: white;
    max-width: 1000px;
    display: grid;
    grid-template-columns: minmax(480px, 1fr);
    grid-template-rows: repeat(7, minmax(240px, 1fr));
  }
  
  .grid-item {
    padding: 10px;
  }

  .grid-item:nth-child(1) {
    background-color: lightblue; /* visual cue only */
    grid-column: 1;
    grid-row: 1;
  }
  .grid-item:nth-child(2) {
    background-color: lightcyan; /* visual cue only */
    grid-column: 1;
    grid-row: 2;
  }
  .grid-item:nth-child(3) {
    background-color: lightsteelblue; /* visual cue only */
    grid-column: 1;
    grid-row: 3;
  }
  .grid-item:nth-child(4) {
    background-color: lightpink; /* visual cue only */
    grid-column: 1;
    grid-row: 4;
  }
  .grid-item:nth-child(5) {
    /* bonus material */
    background-color: orange; /* visual cue only */
    grid-column: 1;
    grid-row: 5;
  }
  .grid-item:nth-child(6) {
    /* bonus material */
    background-color: lightseagreen; /* visual cue only */
    grid-column: 1;
    grid-row: 6;
  }
  .grid-item:nth-child(7) {
    /* bonus material */
    background-color: lightyellow; /* visual cue only */
    grid-column: 1;
    grid-row: 7;
  }
}